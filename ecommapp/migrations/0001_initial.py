# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-09-27 14:43
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ecommapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', ecommapp.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Availibilty_status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Base_Category', models.CharField(max_length=100, unique=True)),
                ('Base_Category_Pic', models.ImageField(upload_to='BaseCatPic/')),
                ('Base_Slug_Field', models.SlugField(blank=True, max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_creation', models.DateField(auto_now_add=True)),
                ('checkout_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cartitem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_Quantity', models.IntegerField(default=1)),
                ('Cart_Product_Belongs_To', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Cart')),
            ],
        ),
        migrations.CreateModel(
            name='CouponCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.TextField(max_length=100)),
                ('Discount', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer_First_Name', models.CharField(max_length=100)),
                ('Customer_Last_Name', models.CharField(max_length=100)),
                ('Customer_Email', models.CharField(max_length=100)),
                ('Address_Line1', models.CharField(max_length=200)),
                ('Address_Line2', models.CharField(max_length=200)),
                ('City', models.CharField(max_length=200)),
                ('State', models.CharField(max_length=200)),
                ('ZIP', models.IntegerField()),
                ('Customer_Contact_Number', models.IntegerField()),
                ('Volts_Credit', models.IntegerField(default=0)),
                ('User_Profile_Pic', models.ImageField(null=True, upload_to='UserProfilePic/')),
                ('User_customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerCouponUsedTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.CouponCode')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Filter_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Filter_Category_Name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Filter_Name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Filter_Name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Flash_Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Flash_Sale_Name', models.CharField(max_length=100)),
                ('Main_Banner', models.ImageField(upload_to='FlashSaleBanner/')),
                ('Flash_slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Flash_Sale_Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Banner_Pics', models.ImageField(upload_to='FlashSaleBanner/')),
                ('Flash_Sale_Ancess', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Flash_Sale')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_In_Name_Of', models.CharField(max_length=100)),
                ('Order_Date_Time', models.DateTimeField(auto_now_add=True)),
                ('Order_Address_Line1', models.CharField(max_length=200)),
                ('Order_Address_Line2', models.CharField(max_length=200)),
                ('Order_City', models.CharField(max_length=200)),
                ('Order_State', models.CharField(default='DelhiNCR', max_length=200)),
                ('Order_ZIP', models.IntegerField()),
                ('Transaction_Id', models.CharField(max_length=100)),
                ('Order_Customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Customer')),
                ('Order_Delivery_Type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Delivery_Type')),
            ],
        ),
        migrations.CreateModel(
            name='Order_Product_Specs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Quantity', models.IntegerField(default=1)),
                ('Final_Ordered_Product_price', models.FloatField()),
                ('Order_Volts_Credit_Used', models.IntegerField(default=0)),
                ('Order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Order_Status_Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_for_order', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment_Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment_Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Images', models.ImageField(upload_to='ProductImages/')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_Name', models.CharField(max_length=200)),
                ('Price', models.FloatField()),
                ('Availiability', models.BooleanField(default=True)),
                ('Description', models.TextField(max_length=10000)),
                ('Features', models.TextField(max_length=10000)),
                ('TechnicalSpecs', models.CharField(max_length=10000)),
                ('Main_Image', models.ImageField(upload_to='ProductImages/')),
                ('Produce_Base_Category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.BaseCategory')),
                ('Product_Filter', models.ManyToManyField(to='ecommapp.Filter_Category')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Review_Title', models.CharField(max_length=200)),
                ('Review_Body', models.TextField(max_length=5000)),
                ('show_review', models.BooleanField(default=True)),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Product')),
                ('Reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Sales_Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sales_First_Name', models.CharField(max_length=100)),
                ('Sales_Last_Name', models.CharField(max_length=100)),
                ('Sales_Email', models.CharField(max_length=100)),
                ('is_intern', models.BooleanField(default=False)),
                ('Sales_Contact_Number', models.IntegerField()),
                ('Sales_Points', models.IntegerField(default=0)),
                ('Sales_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Seller_Id', models.CharField(max_length=100, unique=True)),
                ('Seller_Name', models.CharField(max_length=100)),
                ('Address', models.TextField(max_length=500)),
                ('Profile', models.TextField(max_length=1000)),
                ('email', models.EmailField(max_length=254)),
                ('Contact_Number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Shipment_Orgs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Shipping_Company_Name', models.CharField(max_length=100)),
                ('Shipping_Company_Id', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sub_Category', models.CharField(max_length=100, unique=True)),
                ('Sub_Category_Pic', models.ImageField(upload_to='SubCatPic/')),
                ('Sub_Category_Slug_Field', models.SlugField(blank=True, max_length=120)),
                ('Base_category_Key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.BaseCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tax_Percentage', models.FloatField()),
                ('Prducts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.SubCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Wish_List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User_Wishlist', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wish_List_Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_In_Wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Product')),
                ('Wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Wish_List')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='Shipment_Authority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Shipment_Orgs'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_Sub_Category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.SubCategory'),
        ),
        migrations.AddField(
            model_name='pics',
            name='ProductPics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Product'),
        ),
        migrations.AddField(
            model_name='order_product_specs',
            name='Order_Reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Sales_Team'),
        ),
        migrations.AddField(
            model_name='order_product_specs',
            name='Order_Status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Order_Status_Model'),
        ),
        migrations.AddField(
            model_name='order_product_specs',
            name='Ordered_Product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Product'),
        ),
        migrations.AddField(
            model_name='order_product_specs',
            name='Shipment_Authority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Shipment_Orgs'),
        ),
        migrations.AddField(
            model_name='order',
            name='Order_Payment_Type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Payment_Method'),
        ),
        migrations.AddField(
            model_name='order',
            name='Order_Payment_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Payment_Status'),
        ),
        migrations.AddField(
            model_name='flash_sale',
            name='Products_In_Sale',
            field=models.ManyToManyField(to='ecommapp.Product'),
        ),
        migrations.AddField(
            model_name='filter_category',
            name='Filter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Filter_Name'),
        ),
        migrations.AddField(
            model_name='couponcode',
            name='Sales_Member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Sales_Team'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='Product_In_Cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommapp.Product'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='coupon_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommapp.CouponCode'),
        ),
    ]
